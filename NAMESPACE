# Generated by roxygen2: do not edit by hand

S3method(plot,"2comp_mixt")
S3method(plot,PS_dist_fun)
S3method(plot,decontaminated_density)
S3method(plot,mixmodel)
S3method(print,PS_dist_fun)
S3method(print,admix_estim)
S3method(print,admix_model)
S3method(print,admix_test)
S3method(print,mixmodel)
S3method(summary,admix_cluster)
export(BVdk_ML_varCov_estimators)
export(BVdk_contrast)
export(BVdk_contrast_gradient)
export(BVdk_estimParam)
export(BVdk_varCov_estimators)
export(IBM_2samples_test)
export(IBM_empirical_contrast)
export(IBM_estimProp)
export(IBM_estimVarCov_gaussVect)
export(IBM_gap)
export(IBM_greenLight_criterion)
export(IBM_hessian_contrast)
export(IBM_k_samples_test)
export(IBM_tabul_stochasticInteg)
export(IBM_theoretical_contrast)
export(IBM_theoretical_gap)
export(PatraSen_cv_mixmodel)
export(PatraSen_density_est)
export(PatraSen_dist_calc)
export(PatraSen_est_mix_model)
export(admix_clustering)
export(admix_estim)
export(admix_test)
export(decontaminated_cdf)
export(decontaminated_density)
export(detect_support_type)
export(estimVarCov_empProcess)
export(gaussianity_test)
export(is_equal_knownComp)
export(kernel_cdf)
export(kernel_density)
export(knownComp_to_uniform)
export(orthoBasis_coef)
export(orthoBasis_test_H0)
export(poly_orthonormal_basis)
export(rsimmix)
export(rsimmix_mix)
export(sim_gaussianProcess)
importFrom(Rcpp,sourceCpp)
importFrom(Rdpack,reprompt)
importFrom(utils,packageVersion)
useDynLib(admix, .registration = TRUE)
